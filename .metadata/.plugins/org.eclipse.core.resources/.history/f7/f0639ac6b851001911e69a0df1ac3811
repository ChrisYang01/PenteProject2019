import java.awt.Color;
import java.awt.Graphics;

import javax.swing.JPanel;

public class PenteGameBoard extends JPanel{
	
	public static final int EMPTY = 0;
	public static final int BLACKSTONE = 1;
	public static final int WHITESTONE = -1; 
	public static final int NUM_SQUARES_SIDE = 19;
	public static final int INNER_START = 7;
	public static final int INNER_END = 11;
	
	private int bWidth, bHeight;
	
	private PenteBoardSquare testSquare;
	private int squareW, squareH;
	
	private PenteBoardSquare [][] gameBoard;
	
	
	public PenteGameBoard(int w, int h) {
		
		//store this variabales 
		bWidth = w;
		bHeight = h;
		
		
		this.setSize(w,h);
		this.setBackground(Color.CYAN);
		
		squareW = bWidth/this.NUM_SQUARES_SIDE;
		squareH = bHeight/this.NUM_SQUARES_SIDE;
		
		//testSquare = new PenteBoardSquare(0,0,squareW,squareH);
		
		gameBoard = new PenteBoardSquare [NUM_SQUARES_SIDE][NUM_SQUARES_SIDE];
		
		for (int row = 0; row< NUM_SQUARES_SIDE; row++) {
			for (int col = 0; col< NUM_SQUARES_SIDE; col++) {
			
			gameBoard[row][col] = new PenteBoardSquare(col* squareW,row*squareH,squareW,squareH);
			if ( col >= INNER_START && col <= INNER_END) {
				if ( row >= INNER_START && row <= INNER_END) {
				gameBoard[row][col].setInner();
			}
		}
			gameBoard[row][col].setState(BLACKSTONE);
			}
		}
	}
	
	
	
	//method to do drawing 
	
	public void paintComponent(Graphics g) {
		
		g.setColor(Color.CYAN);
		g.fillRect(0, 0, bWidth, bHeight);
		
		//testSquare.drawMe(g);
		
		
		for(int row = 0; row < NUM_SQUARES_SIDE; row ++) {
			for (int col = 0; col< NUM_SQUARES_SIDE; col++) {
			
			gameBoard[row][col].drawMe(g);
		}
		}
		
		
		
		
		
		
	}

}
